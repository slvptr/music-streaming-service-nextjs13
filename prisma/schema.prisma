datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  email         String?   @unique
  emailVerified DateTime?
  sessions      Session[]
  playlists     Playlist[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Playlist {
    id          String  @id @default(cuid())
    title       String
    description String
    coverUrl    String
    userId      String
    user        User    @relation(fields: [userId], references: [id])
    tracks      TracksOnPlaylists[]
}

model Track {
    id          String  @id @default(cuid())
    artists     Artist[]
    genres      Genre[]
    coverUrl    String
    trackUrl    String
    playlists   TracksOnPlaylists[]
}

model TracksOnPlaylists {
    trackId     String
    track       Track       @relation(fields: [trackId], references: [id])
    playlistId  String
    playlist    Playlist    @relation(fields: [playlistId], references: [id])
    assignedAt  DateTime    @default(now())

    @@id([trackId, playlistId])
}

model Genre {
    id          String  @id @default(cuid())
    name        String
    trackId     String
    track       Track   @relation(fields: [trackId], references: [id])
}

model Artist {
    id          String  @id @default(cuid())
    name        String
    trackId     String
    track       Track  @relation(fields: [trackId], references: [id])
}


